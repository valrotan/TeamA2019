plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2018.06.21"
    id "idea"
    id "eclipse"
}

repositories {
	mavenCentral()
	maven {
		url "https://jitpack.io"
	}
}

//gradlerio.team = "972"
def ROBOT_CLASS = "org.usfirst.frc.team972.Robot"

def robotManifest = {
  attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
  attributes 'Robot-Class': ROBOT_CLASS
}

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", edu.wpi.first.gradlerio.frc.RoboRIO) {
            // Team can be overridden by command line, for use with VSCode
            team = getTeamOrDefault(972)
        }
    }
    artifacts {
        artifact('frcJava', edu.wpi.first.gradlerio.frc.FRCJavaArtifact) {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = getDebugOrDefault(false)
        }
    }
}

dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile 'com.github.juchong:ADIS16448-RoboRIO-Driver:master-SNAPSHOT'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
  from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  manifest robotManifest
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}